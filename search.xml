<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu</title>
      <link href="/2023/12/10/ubuntu/"/>
      <url>/2023/12/10/ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="开机遇到grub"><a href="#开机遇到grub" class="headerlink" title="开机遇到grub>"></a>开机遇到grub&gt;</h2><h3 id="双系统开机到grub的解决"><a href="#双系统开机到grub的解决" class="headerlink" title="双系统开机到grub的解决"></a>双系统开机到grub的解决</h3><ol><li><p>先在grub&gt;输入ls，展示的是所有分区</p></li><li><p>然后再ls (xxx,xxx)/boot/grub注意括号里面的应该填上自己分区名字，这一步是为了检查grub所在的具体分区，如果没有出现没有找到文件位置的提示，就说明找对了</p></li><li><p>假如找到的分区为(hd1,gpt3)那么就运行set root=(hd1,gpt3)</p></li><li><p>再输入set prefix=(hd1,gpt3)/boot/grub</p></li><li><p>输入insmod normal，再输入normal</p></li><li><p>就会到正常引导了</p></li><li><p>进入linux系统后sudo update-grub再输入sudo grub-install /dev/sda</p></li></ol><p>PS:出现这种情况的可能原因：win系统更新覆盖了，强制关闭linux，等等</p><h2 id="Linux安装MySQL"><a href="#Linux安装MySQL" class="headerlink" title="Linux安装MySQL"></a>Linux安装MySQL</h2><h3 id="Linux-UNIX-上安装-MySQL"><a href="#Linux-UNIX-上安装-MySQL" class="headerlink" title="Linux/UNIX 上安装 MySQL"></a>Linux/UNIX 上安装 MySQL</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mysql-server <span class="token comment">#默认最新版</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装依赖</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libmysqlclient-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">netstat</span> <span class="token parameter variable">-tap</span> <span class="token operator">|</span> <span class="token function">grep</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当你在Ubuntu上使用sudo apt-get install mysql-server指令安装mysql后，你会发现你登录不上，会出现这样的情况。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop@yjp:~$ mysqlERROR <span class="token number">1045</span> <span class="token punctuation">(</span><span class="token number">28000</span><span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'yjp'</span>@<span class="token string">'localhost'</span> <span class="token punctuation">(</span>using password: NO<span class="token punctuation">)</span>hadoop@yjp:~$ mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>Enter password: ERROR <span class="token number">1698</span> <span class="token punctuation">(</span><span class="token number">28000</span><span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'localhost'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用上述指令安装mysql后，在安装过程中mysql数据库自动为你设置了账号密码，并放在了/etc/mysql/debian.cnf文件中</p><h3 id="修改MYSQL-用户密码"><a href="#修改MYSQL-用户密码" class="headerlink" title="修改MYSQL 用户密码"></a>修改MYSQL 用户密码</h3><p>一、切换数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二、修改root用户密码</p><p>注意下面两条修改mysql root用户密码的命令只适用于mysql5.7版本及以下</p><p>这里你会发现你在网上搜出来的大部分修改面的命令都是</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update user set password=PASSWORD("123456") where user=root;                              --设置密码为123456<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者是</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update user set authentication_string=PASSWORD(“123456”) where user=‘root’;              --设置密码为123456<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你是mysql5.7用户及以下，上面两条指令适用于你！</p><p>执行完命令之后 flush privileges;  更新所有操作权限，重启数据库 service mysql restart 即可</p><p>mysql 5.7.9以后废弃了password字段和password()函数；authentication_string:字段表示用户密码，而authentication_string字段下只能是mysql加密后的41位字符串密码。</p><p>而我们一般现在使用指令安装mysql会默认安装最新版mysql8.0</p><p>修改mysql8.0 root用户密码正确打开方式</p><p>MySql 从8.0开始修改密码有了变化，在user表加了字段authentication_string，修改密码前先检查authentication_string是否为空</p><p>如果不为空，先置空字段在修改密码</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use mysql; update user set authentication_string='' where user='root';      --将字段置为空alter user 'root'@'localhost' identified with mysql_native_password by '123456';   --修改密码为123456如果为空，则直接修改密码alter user 'root'@'localhost' identified with mysql_native_password by '123456';   --修改密码为123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改成功！</p><img src="/2023/12/10/ubuntu/mysql-changepasswd.png" class="" title="MySQL修改根用户密码"><p><strong>如果出现下列错误：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是由于你上面如果用的第二种方法设置绕过密码登录，这时root用户是无密码状态，会报这个错误！</p><p>这时，先执行</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再执行修改密码命令就行了</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter user 'root'@'localhost' identified with mysql_native_password by '123456';      --修改密码为123456<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>大功告成！</p><p>重启mysql</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> mysql restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用第一种方法直接查看mysql默认账户密码登录的则自动忽略下述内容！</p><p>如果你是修改的 /etc/mysql/mysql.conf.d/mysqld.cnf  文件设置绕过密码登录（即上述第二种方法进入数据库）</p><p>设置密码完毕后一定要将 skip-grant-tables 这句代码在文件中注释掉。</p><p>然后重启mysql</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> mysql restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>当然你也可以先登录电脑root用户，初始mysql的root用户没有密码，只有通过root用户登录mysql时直接回车可以跳过输入密码阶段。</li></ul><h3 id="MYSQL无法读取本地文件文件"><a href="#MYSQL无法读取本地文件文件" class="headerlink" title="MYSQL无法读取本地文件文件"></a>MYSQL无法读取本地文件文件</h3><h4 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h4><p>如果你的系统启用了 SELinux 或 AppArmor，这些安全模块可能会影响文件访问权限。你可以通过禁用它们或者配置相应的规则来解决问题。</p><p>在使用 Ubuntu 或类似基于 Debian 的 Linux 发行版时，AppArmor 是一种应用程序安全框架，用于限制特定程序的活动。如果你需要禁用 AppArmor，可以按照以下步骤进行操作：</p><h4 id="修改AppArmor配置文件"><a href="#修改AppArmor配置文件" class="headerlink" title="修改AppArmor配置文件"></a>修改AppArmor配置文件</h4><p>MySQL的AppArmor的配置文件是/etc/apparmor.d/usr.sbin.mysqld，其中usr.sbin.mysqld代表执行程序/usr/sbin/mysqld，也就是MySQL服务的主程序</p><img src="/2023/12/10/ubuntu/AppArmor-config.png" class="" title="AppArmor关于mysql的安全配置信息"><p>第一行加入允许读取的数据文件夹</p><p>rwk表示</p><ul><li><p>r - 读取 - 读取数据的权限</p></li><li><p>w - 写入 - 创建、删除、写入文件和扩展文件的权限</p></li><li><p>k - lock - 锁定文件的权限，与 write perm 结合以确定它是否有权获取独占锁定</p></li></ul><p>重启AppArmor</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> apparmor reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="取消禁用AppArmor服务-不推荐"><a href="#取消禁用AppArmor服务-不推荐" class="headerlink" title="取消禁用AppArmor服务(不推荐)"></a>取消禁用AppArmor服务(不推荐)</h4><h5 id="1-启用-AppArmor-服务："><a href="#1-启用-AppArmor-服务：" class="headerlink" title="1. 启用 AppArmor 服务："></a>1. 启用 AppArmor 服务：</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将使 AppArmor 在系统启动时自动启动。</p><h5 id="2-启动-AppArmor-服务："><a href="#2-启动-AppArmor-服务：" class="headerlink" title="2. 启动 AppArmor 服务："></a>2. 启动 AppArmor 服务：</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="3-检查-AppArmor-状态："><a href="#3-检查-AppArmor-状态：" class="headerlink" title="3. 检查 AppArmor 状态："></a>3. 检查 AppArmor 状态：</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl status apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令将显示 AppArmor 服务的当前状态。如果状态显示为 “active”，则表示 AppArmor 服务已成功启动。</p><h5 id="4-重新加载-AppArmor-配置（可选）："><a href="#4-重新加载-AppArmor-配置（可选）：" class="headerlink" title="4. 重新加载 AppArmor 配置（可选）："></a>4. 重新加载 AppArmor 配置（可选）：</h5><p>在重新启用 AppArmor 后，你可以选择重新加载配置以使更改生效：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> apparmor reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者，如果你使用的是 systemd：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl reload apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这些步骤应该使 AppArmor 服务重新启用并运行。请注意，重新启用 AppArmor 服务可能会导致之前由 AppArmor 禁用的应用程序再次受到 AppArmor 的限制。确保你的应用程序配置适当，以适应 AppArmor 的规则。</p><h4 id="禁用-AppArmor-服务-不推荐-："><a href="#禁用-AppArmor-服务-不推荐-：" class="headerlink" title="禁用 AppArmor 服务(不推荐)："></a>禁用 AppArmor 服务(不推荐)：</h4><h5 id="1-停止-AppArmor-服务："><a href="#1-停止-AppArmor-服务：" class="headerlink" title="1. 停止 AppArmor 服务："></a>1. 停止 AppArmor 服务：</h5>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl stop apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="2-禁用-AppArmor-服务（可选）"><a href="#2-禁用-AppArmor-服务（可选）" class="headerlink" title="2. 禁用 AppArmor 服务（可选）:"></a>2. 禁用 AppArmor 服务（可选）:</h5>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl disable apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>   这样系统启动时就不会加载 AppArmor 服务。</p><h5 id="3-重启计算机："><a href="#3-重启计算机：" class="headerlink" title="3. 重启计算机："></a>3. 重启计算机：</h5>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="卸载-AppArmor-软件包-不推荐-："><a href="#卸载-AppArmor-软件包-不推荐-：" class="headerlink" title="卸载 AppArmor 软件包(不推荐)："></a>卸载 AppArmor 软件包(不推荐)：</h4><p>如果你希望彻底删除 AppArmor，而不仅仅是停止服务，可以执行以下步骤：</p><h5 id="1-卸载-AppArmor-软件包："><a href="#1-卸载-AppArmor-软件包：" class="headerlink" title="1. 卸载 AppArmor 软件包："></a>1. 卸载 AppArmor 软件包：</h5>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> purge apparmor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>   这将删除 AppArmor 软件包及其配置文件。</p><h5 id="2-重启计算机："><a href="#2-重启计算机：" class="headerlink" title="2. 重启计算机："></a>2. 重启计算机：</h5>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>请注意，禁用或删除 AppArmor 可能会导致系统安全性降低，因为 AppArmor 的目的是提供一层额外的安全保护。在禁用或删除之前，请确保你理解了相关的风险，并确保你有其他安全机制来保护系统。</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li>[1] <a href="https://zhuanlan.zhihu.com/p/407785086">AppArmor与MySQL</a></li></ul><h3 id="MySQL的读取"><a href="#MySQL的读取" class="headerlink" title="MySQL的读取"></a>MySQL的读取</h3><p>mysql的位置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">which</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/bin/mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看 mysql 配置文件加载顺序</span>/usr/bin/mysql <span class="token parameter variable">--verbose</span> <span class="token parameter variable">--help</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">1</span> <span class="token string">'Default options'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后会出现一些信息</p><img src="/2023/12/10/ubuntu/MySQL-config.png" class="" title="MySQL配置加载顺序"><p>这个信息的意思是：</p><p>服务器首先读取的是 /etc/my.cnf 文件，如果前一个文件不存在则继续读 /etc/mysql/my.cnf 文件，依此类推，如若还不存在便会去读~/.my.cnf文件。</p><p>如果以上文件都不存在，则说明在对mysql编译完成之后你没有对mysql进行配置，需要你自己复制一份mysql提供的默认配置文件到上面提到的目录中，然后改名为my.cnf，修改文件的所有者和所属组并赋予执行权限。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/etc<span class="token function">cp</span> /usr/support-files/my-default.cnf /usr/local/mysql/etc/my.cnf<span class="token function">chown</span> <span class="token parameter variable">-R</span> mysql:mysql /usr/etc/<span class="token function">chmod</span> <span class="token number">755</span> /usr/etc/my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完成以上操作之后，需要对my.cnf进行基本配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/etc/my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">basedir <span class="token operator">=</span> /usr/local/mysql              <span class="token comment"># 指mysql的安装目录</span>datadir <span class="token operator">=</span> /usr/local/mysql/data         <span class="token comment"># 指mysql的数据存放目录</span>port <span class="token operator">=</span> <span class="token number">3306</span>                             <span class="token comment"># 指mysql的监听端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后重启mysql使配置生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/support-files/mysql.server restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果修改my.cnf后mysql启动不了,可以通过如下方式查看错误信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/bin/mysqld <span class="token parameter variable">--verbose</span> <span class="token parameter variable">--help</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">1</span> <span class="token string">'Default options'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="修改mysql配置文件"><a href="#修改mysql配置文件" class="headerlink" title="修改mysql配置文件"></a>修改mysql配置文件</h4><img src="/2023/12/10/ubuntu/MySQL-secure_file_priv.png" class="" title="MySQL安全文件夹配置"><p>将mysql的安全文件夹设置为mysql用户的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> mysql:mysql /mysql_data/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加读写权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /mysql_data/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/12/10/ubuntu/MySQL-Config-dir.png" class="" title="MySQL配置数据文件夹"><h2 id="QT6-61"><a href="#QT6-61" class="headerlink" title="QT6.61"></a>QT6.61</h2><h3 id="安装完打不开的问题"><a href="#安装完打不开的问题" class="headerlink" title="安装完打不开的问题"></a>安装完打不开的问题</h3><h4 id="解决Qt出现qt-qpa-plugin-Could-not-load-the-Qt-platform-plugin-“xcb”"><a href="#解决Qt出现qt-qpa-plugin-Could-not-load-the-Qt-platform-plugin-“xcb”" class="headerlink" title="解决Qt出现qt.qpa.plugin:Could not load the Qt platform plugin “xcb”"></a>解决Qt出现qt.qpa.plugin:Could not load the Qt platform plugin “xcb”</h4><p>qt.qpa.plugin: Could not load the Qt platform plugin “xcb” in “” even though it was found.<br>This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.</p><p>Available platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, xcb.</p><p>Aborted (core dumped)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@node01:/home/Junjie/ovito-basic-3.9.4-x86_64/bin<span class="token comment"># ./ovito</span>qt.qpa.plugin: From <span class="token number">6.5</span>.0, xcb-cursor0 or libxcb-cursor0 is needed to load the Qt xcb platform plugin.qt.qpa.plugin: Could not load the Qt platform plugin <span class="token string">"xcb"</span> <span class="token keyword">in</span> <span class="token string">""</span> even though it was found.This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem. Available platform plugins are: minimal, wayland, xcb. 已放弃 <span class="token punctuation">(</span>核心已转储<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="定位问题"><a href="#定位问题" class="headerlink" title="定位问题"></a>定位问题</h5><p>修改配置文件~/.bashrc：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在最末尾添加如下语句，会在qtcreator启动时，列出详细的错误提示。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">QT_DEBUG_PLUGINS</span><span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存退出编辑，使配置文件生效：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动qtcreator会弹出如下详细错误信息：</p><img src="/2023/12/10/ubuntu/Qt-error.png" class="" title="Qt启动错误"><p>在打印的错误信息的最下面，找到了引发错误的真正原因：</p><img src="/2023/12/10/ubuntu/QT-detail.jpg" class="" title="QT详细错误"><img src="/2023/12/10/ubuntu/QT-detail-error.png" class="" title="引发错误的真正原因"><p>也就是Qt动态链接库的问题，当加载libqxcb.so库的时候，还需要加载libxcb-xinerama库。<br>切换到报错libxcb.so所在目录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#替换为自己的报错目录</span><span class="token builtin class-name">cd</span> /home/tangdou/Qt/Tools/QtCreator/lib/Qt/plugins/platforms/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行ldd libqxcb.so，查看关联内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ldd libqxcb.so<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2023/12/10/ubuntu/My-QT-Error.jpg" class="" title="关联内容"><p>libxcb.cursor.so.0没有</p><h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>安装libxcb-cursor0库：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#如果还存在其他依赖库没有安装，也一并安装。</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libxcb-cursor0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="PDF转图片"><a href="#PDF转图片" class="headerlink" title="PDF转图片"></a>PDF转图片</h2><p>Pdftoppm是一个命令行工具，它可以将PDF文档页面转换为PNG等格式的图片。还可以指定图片的分辨率、比例和裁剪图片。</p><p>根据你的Linux发行版按照如下方式安装pdftoppm。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> poppler-utils     <span class="token punctuation">[</span>On Debian/Ubuntu <span class="token operator">&amp;</span> Mint<span class="token punctuation">]</span><span class="token function">sudo</span> dnf <span class="token function">install</span> poppler-utils     <span class="token punctuation">[</span>On RHEL/CentOS <span class="token operator">&amp;</span> Fedora<span class="token punctuation">]</span><span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token function">install</span> poppler-tools  <span class="token punctuation">[</span>On OpenSUSE<span class="token punctuation">]</span>  <span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> poppler             <span class="token punctuation">[</span>On Arch Linux<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将PDF文档转成图片"><a href="#将PDF文档转成图片" class="headerlink" title="将PDF文档转成图片"></a>将PDF文档转成图片</h3><p>将pdf转换为图片的命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pdftoppm -<span class="token operator">&lt;</span>image_format<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>pdf_filename<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span>pdftoppm -<span class="token operator">&lt;</span>image_format<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>pdf_filename<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在下列示例中，我的pdf文件名称是Linux_For_Beginners.pdf，我会将其转换为PNG格式并将图片命为Linux_For_Beginners。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pdftoppm <span class="token parameter variable">-png</span> Linux_For_Beginners.pdf Linux_For_Beginners<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将pdf文件每一页都转换为png格式的图片，如Linux_For_Beginners-1.png、Linux_For_Beginners-2.png等。</p><img src="/2023/12/10/ubuntu/pdftoppm-all.png" class="" title="每一页都转换"><h3 id="将指定范围内的页面转成图片"><a href="#将指定范围内的页面转成图片" class="headerlink" title="将指定范围内的页面转成图片"></a>将指定范围内的页面转成图片</h3><p>命令如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">pdftoppm -&lt;image_format&gt; -f N -l N &lt;pdf_filename&gt; &lt;image_name&gt;pdftoppm -&lt;image_format&gt; -f N -l N &lt;pdf_filename&gt; &lt;image_name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>N为起始页编号， -l N 指定结束页编号。</p><p>在下面的例子中，我们将文件Linux_For_Beginners.pdf的第10页到第15页转换为PNG。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">pdftoppm -png -f 10 -l 15 Linux_For_Beginners.pdf Linux_For_Beginners<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出的图片名为Linux_For_Beginners-10.png，Linux_For_Beginners-11.png，等。</p><img src="/2023/12/10/ubuntu/change-some.png" class="" title="转换部分页"><h3 id="将pdf文件的第一页转成图片"><a href="#将pdf文件的第一页转成图片" class="headerlink" title="将pdf文件的第一页转成图片"></a>将pdf文件的第一页转成图片</h3><p>命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pdftoppm <span class="token parameter variable">-png</span> <span class="token parameter variable">-f</span> <span class="token number">1</span> <span class="token parameter variable">-l</span> <span class="token number">1</span> Linux_For_Beginners.pdf Linux_For_Beginners<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="调整转换图片的DPI质量"><a href="#调整转换图片的DPI质量" class="headerlink" title="调整转换图片的DPI质量"></a>调整转换图片的DPI质量</h3><p>Pdftoppm默认将PDF页面转换为DPI为150的图片。</p><p>如需要调整，使用参数选项”-rx”和”-ry”。</p><p>在这个例子中，我们将Linux_For_Beginners.pdf转换的图片DPI质量调整为300。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pdftoppm <span class="token parameter variable">-png</span> <span class="token parameter variable">-rx</span> <span class="token number">300</span> <span class="token parameter variable">-ry</span> <span class="token number">300</span> Linux_For_Beginners.pdf Linux_For_Beginners<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要查看pdftoppm中可用和支持的所有选项，请运行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pdftoppm <span class="token parameter variable">--help</span>  <span class="token function">man</span> pdftoppm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="强制结束程序"><a href="#强制结束程序" class="headerlink" title="强制结束程序"></a>强制结束程序</h2><h3 id="找到程序运行的进程号"><a href="#找到程序运行的进程号" class="headerlink" title="找到程序运行的进程号"></a>找到程序运行的进程号</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pgrep <span class="token parameter variable">-f</span> <span class="token string">"software_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pidof software_name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用 ps 命令找到进程号</span><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"process_name"</span><span class="token comment"># 或者使用 pgrep 命令</span>pgrep <span class="token parameter variable">-f</span> <span class="token string">"process_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>强制 (PID为进程号)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">kill</span> <span class="token parameter variable">-9</span> PID<span class="token comment">#或者</span><span class="token function">pkill</span> <span class="token parameter variable">-9</span> <span class="token string">"process_name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Ubuntu22-04利用lightdm替换gdm3出现的问题或Bug"><a href="#Ubuntu22-04利用lightdm替换gdm3出现的问题或Bug" class="headerlink" title="Ubuntu22.04利用lightdm替换gdm3出现的问题或Bug"></a>Ubuntu22.04利用lightdm替换gdm3出现的问题或Bug</h2><h3 id="查看当前屏幕管理器"><a href="#查看当前屏幕管理器" class="headerlink" title="查看当前屏幕管理器"></a>查看当前屏幕管理器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etx/X11/default-display-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看当前桌面环境"><a href="#查看当前桌面环境" class="headerlink" title="查看当前桌面环境"></a>查看当前桌面环境</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token environment constant">$DESKTOP_SESSION</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="切换屏幕管理器"><a href="#切换屏幕管理器" class="headerlink" title="切换屏幕管理器"></a>切换屏幕管理器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg-reconfigure gdm3<span class="token function">sudo</span> dpkg-reconfigure lightdm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="推荐下载lightdm屏幕管理器"><a href="#推荐下载lightdm屏幕管理器" class="headerlink" title="推荐下载lightdm屏幕管理器"></a>推荐下载lightdm屏幕管理器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> lightdm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修复lightdm无法锁屏的问题"><a href="#修复lightdm无法锁屏的问题" class="headerlink" title="修复lightdm无法锁屏的问题"></a>修复lightdm无法锁屏的问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gsettings get org.gnome.desktop.lockdown disable-lock-screen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查disable-lock-screen属性，若输出false则是正常，如果返回值是True，则输入下面命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gsettings <span class="token builtin class-name">set</span> org.gnome.desktop.lockdown disable-lock-screen <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更改为flase，</p><p>输入下面命令看是否可以锁屏：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dm-tool lock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若可以实现锁屏，就是图形界面是lightdm而不是gdm3，使用了lightdm 桌面管理器，导致锁屏命令变化，即：设置-&gt;键盘快捷键-&gt;添加自定义快捷键：</p><p>禁用原锁屏键</p><img src="/2023/12/10/ubuntu/lock-pingmu.png" class="" title="禁用锁屏快捷键"><p>自定义快捷键</p><img src="/2023/12/10/ubuntu/zidingyi.png" class="" title="自定义快捷键"><h2 id="输入法无法切换中文"><a href="#输入法无法切换中文" class="headerlink" title="输入法无法切换中文"></a>输入法无法切换中文</h2><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>目前gdm3无法使用中文，我使用的是lightdm屏幕管理器</p><p>使用搜狗输入法</p><p>安装搜狗输入法</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> sogoupinyin_4.0.1.2800_x86_64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要是因为缺少包导致的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libgsettings-qt1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/qq_39779233/article/details/127290795">[1] wonghome. Ubuntu 18.04 安装搜狗输入法 [EB/OL].</a><br><a href="https://blog.csdn.net/yuzhongmanbu99/article/details/127944446">[2] 雨中漫步-99. ubuntu系统安装好搜狗输入法后只能输入英文，无法输入中文的解决方案 [EB/OL]. </a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-matery</title>
      <link href="/2023/12/10/hexo-matery/"/>
      <url>/2023/12/10/hexo-matery/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建hexo"><a href="#搭建hexo" class="headerlink" title="搭建hexo"></a>搭建hexo</h2><h3 id="安装前置工具"><a href="#安装前置工具" class="headerlink" title="安装前置工具"></a>安装前置工具</h3><p>首先需要安装</p><ul><li><p><a href="https://nodejs.org/en">Node.js</a>((Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本))</p></li><li><p><a href="https://git-scm.com/">Git</a></p></li></ul><p>建议将Node.js和Git都放进环境变量</p><img src="/2023/12/10/hexo-matery/environment-variables.png" class="" title="环境变量"><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>网站配置信息位于_config.yml</p><p>资源文件夹位于source/</p><p>主题文件夹位于themes/</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>参数配置请参考</p><p><a href="https://hexo.io/zh-cn/docs/configuration">hexo官方文档-配置</a></p><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="初始化init"><a href="#初始化init" class="headerlink" title="初始化init"></a>初始化init</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init <span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="新建一篇文章new"><a href="#新建一篇文章new" class="headerlink" title="新建一篇文章new"></a>新建一篇文章new</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><p>例如<code>hexo new "post title with whitespace"</code></p><h4 id="生成静态文件generate"><a href="#生成静态文件generate" class="headerlink" title="生成静态文件generate"></a>生成静态文件generate</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以简写为<code>hexo g</code></p><h4 id="启动服务server"><a href="#启动服务server" class="headerlink" title="启动服务server"></a>启动服务server</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><p>可以简写为<code>hexo s</code></p><h4 id="部署网站deploy"><a href="#部署网站deploy" class="headerlink" title="部署网站deploy"></a>部署网站deploy</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以简写为<code>hexo d</code></p><h4 id="清除缓存文件-db-json-和已生成的静态文件-public-。clean"><a href="#清除缓存文件-db-json-和已生成的静态文件-public-。clean" class="headerlink" title="清除缓存文件 (db.json) 和已生成的静态文件 (public)。clean"></a>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。clean</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="显示版本version"><a href="#显示版本version" class="headerlink" title="显示版本version"></a>显示版本version</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="在-GitHub-Pages-上部署-Hexo"><a href="#在-GitHub-Pages-上部署-Hexo" class="headerlink" title="在 GitHub Pages 上部署 Hexo"></a>在 GitHub Pages 上部署 Hexo</h4><h5 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h5><ol><li>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>。<code>npm install hexo-deployer-git --save</code></li><li>在 <code>_config.yml</code> 中添加以下配置（如果配置已经存在，请将其替换为如下）:</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repo: https://github.com/<span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>project<span class="token operator">&gt;</span>  <span class="token comment"># example, https://github.com/hexojs/hexojs.github.io</span>  branch: gh-pages<span class="token punctuation">(</span>你的分支名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>执行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</li><li>浏览 <code>&lt;GitHub 用户名&gt;.github.io</code> 检查你的网站能否运作。</li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://hexo.io/zh-cn/">hexo官方文档</a></li></ul><h2 id="配置matery主题"><a href="#配置matery主题" class="headerlink" title="配置matery主题"></a>配置matery主题</h2><h3 id="仓库位置"><a href="#仓库位置" class="headerlink" title="仓库位置"></a>仓库位置</h3><p><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a></p><p>将此仓库clone到你站点的themes/文件夹下</p><p>按照blinkfox大神的说明配置即可</p><h2 id="图片无法显示"><a href="#图片无法显示" class="headerlink" title="图片无法显示"></a>图片无法显示</h2><p>修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</p><p>安装插件:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-image-link <span class="token parameter variable">--save</span><span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-marked <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启用:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># _config.yml</span>post_asset_folder: <span class="token boolean">true</span>marked:  prependRoot: <span class="token boolean">true</span>  postAsset: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启用后，资源图片将会被自动解析为其对应文章的路径。</p><p>需要注意的是:图片名最好是英文名称,如果你自己重命名了图片为中文名称的话，将出现不可预知的错误。</p><p>例如： <code>image.jpg</code> 位置为 <code>/2020/01/02/foo/image.jpg</code> ，这表示它是 <code>/2020/01/02/foo/</code> 文章的一张资源图片， <code>![](image.jpg)</code> 将会被解析为 <code>&lt;img src="/2020/01/02/foo/image.jpg"&gt;</code> 。</p><h3 id="使用typora优化体验"><a href="#使用typora优化体验" class="headerlink" title="使用typora优化体验"></a>使用typora优化体验</h3><img src="/2023/12/10/hexo-matery/Typora-picture-configuration.png" class="" title="Typora图像设置"><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="http://edulinks.cn/2020/03/14/20200314-write-hexo-with-typora/">Hexo博客写作与图片处理的经验</a></li><li>[2] <a href="https://hexo.io/zh-cn/docs/asset-folders.html">Hexo官方文档</a></li></ul><h2 id="代码块问题"><a href="#代码块问题" class="headerlink" title="代码块问题"></a>代码块问题</h2><p>正常配置代码块会变成这样</p><img src="/2023/12/10/hexo-matery/ugly-code-blocks.png" class="" title="难看的代码块"><p>除了使用blinkfox大神的配置外</p><img src="/2023/12/10/hexo-matery/Configuration-of-code-blocks-by-blinkfox-master.png" class="" title="blinkfox大神代码块的配置"><p>还应该参考hexo官方文档给出的解决方案</p><img src="/2023/12/10/hexo-matery/hexo-official-document-about-prismjs-configuration.png" class="" title="hexo官方文档关于prismjs的配置"><p>主要修改<code>syntax_highlighter</code>和<code>line_threshould</code>即可</p><p>修改后的代码块</p><img src="/2023/12/10/hexo-matery/Modified-code-block.png" class="" title="修改后的代码块"><h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://hexo.io/zh-cn/docs/syntax-highlight#PrismJS">hexo关于代码高亮的官方文档</a></li><li>[2] <a href="https://github.com/KeyenZhou/hexo-theme-matery/blob/develop/README_CN.md">hexo-matery主题配置</a></li></ul><h2 id="hexo传输过程的警告和error"><a href="#hexo传输过程的警告和error" class="headerlink" title="hexo传输过程的警告和error"></a>hexo传输过程的警告和error</h2><h3 id="Windows下Git使用警告：warning：LF-will-be-replaced-by-CRLF-in-××××-××"><a href="#Windows下Git使用警告：warning：LF-will-be-replaced-by-CRLF-in-××××-××" class="headerlink" title="Windows下Git使用警告：warning：LF will be replaced by CRLF in ××××.××"></a>Windows下Git使用警告：warning：LF will be replaced by CRLF in ××××.××</h3><p><strong>1、不同操作系统下，处理行尾结束符的方法是不同的</strong>：</p><p>　windows下：CRLF（表示句尾使用回车换行两个字符，即windows下的”\r\n”换行）</p><p>​    unix下：LF（表示句尾，只使用换行）</p><p>​    mac下：CR（表示只使用回车）</p><p><strong>2、Git下处理“换行”（line ending）</strong></p><p>　　core.autocrlf是git中负责处理line ending的变量，可以设置3个值：true，false，inout。</p><p>（1）设置为true <code>git config --global core.autocrlf true</code></p><p>​     当设置成true时，这意味着你在任何时候添加(add)文件到git仓库时，git都会视为它是一个文本文件(text file)。</p><p>　　　它将把crlf变成LF。</p><p>（2）设置为false <code>git config --global core.autocrlf false</code></p><p>  　当设置成false时，line endings将不做转换操作。文本文件保持原来的样子。</p><p>（3）设置为input时，添加文件git仓库时，git把crlf编程lf。当有人Check代码时还是lf方式。因此在window操作系统下，不要使用这个设置。</p><h2 id="部署评论模块"><a href="#部署评论模块" class="headerlink" title="部署评论模块"></a>部署评论模块</h2><h3 id="livere"><a href="#livere" class="headerlink" title="livere"></a>livere</h3><p>我们可以看到/themes/hexo-theme-matery/_config.yml</p><p>有如下配置信息</p><img src="/2023/12/10/hexo-matery/livere-config.png" class="" title="livere配置"><p>在来必力网站注册:</p><p><a href="https://www.livere.com/">来必力</a></p><p>注册好账号之后打开：后台管理——&gt;代码管理 复制 data-uid的值，如下图</p><img src="/2023/12/10/hexo-matery/Laibili-management-interface.png" class="" title="来必力管理界面"><p>将data-uid的值填入_config.yml配置文件里面的uid即可。</p>]]></content>
      
      
      <categories>
          
          <category> hexo-matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/12/10/hello-world/"/>
      <url>/2023/12/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
