<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu</title>
      <link href="/2023/12/10/ubuntu/"/>
      <url>/2023/12/10/ubuntu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo-matery</title>
      <link href="/2023/12/10/hexo-matery/"/>
      <url>/2023/12/10/hexo-matery/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建hexo"><a href="#搭建hexo" class="headerlink" title="搭建hexo"></a>搭建hexo</h2><h3 id="安装前置工具"><a href="#安装前置工具" class="headerlink" title="安装前置工具"></a>安装前置工具</h3><p>首先需要安装</p><ul><li><p><a href="https://nodejs.org/en">Node.js</a>((Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本))</p></li><li><p><a href="https://git-scm.com/">Git</a></p></li></ul><p>建议将Node.js和Git都放进环境变量</p><img src="/2023/12/10/hexo-matery/environment-variables.png" class="" title="环境变量"><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>网站配置信息位于_config.yml</p><p>资源文件夹位于source/</p><p>主题文件夹位于themes/</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>参数配置请参考</p><p><a href="https://hexo.io/zh-cn/docs/configuration">hexo官方文档-配置</a></p><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="初始化init"><a href="#初始化init" class="headerlink" title="初始化init"></a>初始化init</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init <span class="token punctuation">[</span>folder<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="新建一篇文章new"><a href="#新建一篇文章new" class="headerlink" title="新建一篇文章new"></a>新建一篇文章new</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><p>例如<code>hexo new "post title with whitespace"</code></p><h4 id="生成静态文件generate"><a href="#生成静态文件generate" class="headerlink" title="生成静态文件generate"></a>生成静态文件generate</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以简写为<code>hexo g</code></p><h4 id="启动服务server"><a href="#启动服务server" class="headerlink" title="启动服务server"></a>启动服务server</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><p>可以简写为<code>hexo s</code></p><h4 id="部署网站deploy"><a href="#部署网站deploy" class="headerlink" title="部署网站deploy"></a>部署网站deploy</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以简写为<code>hexo d</code></p><h4 id="清除缓存文件-db-json-和已生成的静态文件-public-。clean"><a href="#清除缓存文件-db-json-和已生成的静态文件-public-。clean" class="headerlink" title="清除缓存文件 (db.json) 和已生成的静态文件 (public)。clean"></a>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。clean</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="显示版本version"><a href="#显示版本version" class="headerlink" title="显示版本version"></a>显示版本version</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="在-GitHub-Pages-上部署-Hexo"><a href="#在-GitHub-Pages-上部署-Hexo" class="headerlink" title="在 GitHub Pages 上部署 Hexo"></a>在 GitHub Pages 上部署 Hexo</h4><h5 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h5><ol><li>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>。<code>npm install hexo-deployer-git --save</code></li><li>在 <code>_config.yml</code> 中添加以下配置（如果配置已经存在，请将其替换为如下）:</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repo: https://github.com/<span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>project<span class="token operator">&gt;</span>  <span class="token comment"># example, https://github.com/hexojs/hexojs.github.io</span>  branch: gh-pages<span class="token punctuation">(</span>你的分支名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>执行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</li><li>浏览 <code>&lt;GitHub 用户名&gt;.github.io</code> 检查你的网站能否运作。</li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://hexo.io/zh-cn/">hexo官方文档</a></li></ul><h2 id="配置matery主题"><a href="#配置matery主题" class="headerlink" title="配置matery主题"></a>配置matery主题</h2><h3 id="仓库位置"><a href="#仓库位置" class="headerlink" title="仓库位置"></a>仓库位置</h3><p><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a></p><p>将此仓库clone到你站点的themes/文件夹下</p><p>按照blinkfox大神的说明配置即可</p><h2 id="图片无法显示"><a href="#图片无法显示" class="headerlink" title="图片无法显示"></a>图片无法显示</h2><p>修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</p><p>安装插件:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-image-link <span class="token parameter variable">--save</span><span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-marked <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启用:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># _config.yml</span>post_asset_folder: <span class="token boolean">true</span>marked:  prependRoot: <span class="token boolean">true</span>  postAsset: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启用后，资源图片将会被自动解析为其对应文章的路径。</p><p>需要注意的是:图片名最好是英文名称,如果你自己重命名了图片为中文名称的话，将出现不可预知的错误。</p><p>例如： <code>image.jpg</code> 位置为 <code>/2020/01/02/foo/image.jpg</code> ，这表示它是 <code>/2020/01/02/foo/</code> 文章的一张资源图片， <code>![](image.jpg)</code> 将会被解析为 <code>&lt;img src="/2020/01/02/foo/image.jpg"&gt;</code> 。</p><h3 id="使用typora优化体验"><a href="#使用typora优化体验" class="headerlink" title="使用typora优化体验"></a>使用typora优化体验</h3><img src="/2023/12/10/hexo-matery/Typora-picture-configuration.png" class="" title="Typora图像设置"><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="http://edulinks.cn/2020/03/14/20200314-write-hexo-with-typora/">Hexo博客写作与图片处理的经验</a></li><li>[2] <a href="https://hexo.io/zh-cn/docs/asset-folders.html">Hexo官方文档</a></li></ul><h2 id="代码块问题"><a href="#代码块问题" class="headerlink" title="代码块问题"></a>代码块问题</h2><p>正常配置代码块会变成这样</p><img src="/2023/12/10/hexo-matery/ugly-code-blocks.png" class="" title="难看的代码块"><p>除了使用blinkfox大神的配置外</p><img src="/2023/12/10/hexo-matery/Configuration-of-code-blocks-by-blinkfox-master.png" class="" title="blinkfox大神代码块的配置"><p>还应该参考hexo官方文档给出的解决方案</p><img src="/2023/12/10/hexo-matery/hexo-official-document-about-prismjs-configuration.png" class="" title="hexo官方文档关于prismjs的配置"><p>主要修改<code>syntax_highlighter</code>和<code>line_threshould</code>即可</p><p>修改后的代码块</p><img src="/2023/12/10/hexo-matery/Modified-code-block.png" class="" title="修改后的代码块"><h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://hexo.io/zh-cn/docs/syntax-highlight#PrismJS">hexo关于代码高亮的官方文档</a></li><li>[2] <a href="https://github.com/KeyenZhou/hexo-theme-matery/blob/develop/README_CN.md">hexo-matery主题配置</a></li></ul><h2 id="hexo传输过程的警告和error"><a href="#hexo传输过程的警告和error" class="headerlink" title="hexo传输过程的警告和error"></a>hexo传输过程的警告和error</h2><h3 id="Windows下Git使用报错：warning：LF-will-be-replaced-by-CRLF-in-××××-××"><a href="#Windows下Git使用报错：warning：LF-will-be-replaced-by-CRLF-in-××××-××" class="headerlink" title="Windows下Git使用报错：warning：LF will be replaced by CRLF in ××××.××"></a>Windows下Git使用报错：warning：LF will be replaced by CRLF in ××××.××</h3><p><strong>1、不同操作系统下，处理行尾结束符的方法是不同的</strong>：</p><p>　windows下：CRLF（表示句尾使用回车换行两个字符，即windows下的”\r\n”换行）</p><p>​    unix下：LF（表示句尾，只使用换行）</p><p>​    mac下：CR（表示只使用回车）</p><p><strong>2、Git下处理“换行”（line ending）</strong></p><p>　　core.autocrlf是git中负责处理line ending的变量，可以设置3个值：true，false，inout。</p><p>（1）设置为true <code>git config --global core.autocrlf true</code></p><p>​     当设置成true时，这意味着你在任何时候添加(add)文件到git仓库时，git都会视为它是一个文本文件(text file)。</p><p>　　　它将把crlf变成LF。</p><p>（2）设置为false <code>git config --global core.autocrlf false</code></p><p>  　当设置成false时，line endings将不做转换操作。文本文件保持原来的样子。</p><p>（3）设置为input时，添加文件git仓库时，git把crlf编程lf。当有人Check代码时还是lf方式。因此在window操作系统下，不要使用这个设置。</p><h2 id="部署评论模块"><a href="#部署评论模块" class="headerlink" title="部署评论模块"></a>部署评论模块</h2><h3 id="livere"><a href="#livere" class="headerlink" title="livere"></a>livere</h3><p>我们可以看到/themes/hexo-theme-matery/_config.yml</p><p>有如下配置信息</p><img src="/2023/12/10/hexo-matery/livere-config.png" class="" title="livere配置"><p>在来必力网站注册:</p><p><a href="https://www.livere.com/">来必力</a></p><p>注册好账号之后打开：后台管理——&gt;代码管理 复制 data-uid的值，如下图</p><img src="/2023/12/10/hexo-matery/Laibili-management-interface.png" class="" title="来必力管理界面"><p>将data-uid的值填入_config.yml配置文件里面的uid即可。</p>]]></content>
      
      
      <categories>
          
          <category> hexo-matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/12/10/hello-world/"/>
      <url>/2023/12/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
